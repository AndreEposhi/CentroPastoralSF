// <auto-generated />
using System;
using CentroPastoralSF.Infraestructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CentroPastoralSF.Infraestructure.Data.Migrations
{
    [DbContext(typeof(CentroPastoralSFContext))]
    [Migration("20240628232333_Dizmista_Endereco_Complemento_Nulo")]
    partial class Dizmista_Endereco_Complemento_Nulo
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CentroPastoralSF.Domain.Dizimista.Dizimista", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_DIZIMISTA");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DAT_DATA_ATUALIZACAO");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DAT_DATA_CRIACAO");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2")
                        .HasColumnName("DAT_DATA_NASCIMENTO");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int")
                        .HasColumnName("ID_USUARIO");

                    b.HasKey("Id")
                        .HasName("PK_T_DIZIMISTA_ID_DIZIMISTA");

                    b.HasIndex("UsuarioId");

                    b.ToTable("T_DIZIMISTA", (string)null);
                });

            modelBuilder.Entity("CentroPastoralSF.Domain.Usuario.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_USUARIO");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DAT_DATA_ATUALIZACAO");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DAT_DATA_CRIACAO");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("SNH_SENHA");

                    b.HasKey("Id")
                        .HasName("PK_T_USUARIO_ID_USUARIO");

                    b.ToTable("T_USUARIO", (string)null);
                });

            modelBuilder.Entity("CentroPastoralSF.Domain.Dizimista.Dizimista", b =>
                {
                    b.HasOne("CentroPastoralSF.Domain.Usuario.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_T_DIZIMISTA_ID_USUARIO");

                    b.OwnsOne("CentroPastoralSF.Domain.ValueObjects.Email", "Email", b1 =>
                        {
                            b1.Property<int>("DizimistaId")
                                .HasColumnType("int");

                            b1.Property<string>("Endereco")
                                .IsRequired()
                                .HasMaxLength(300)
                                .HasColumnType("NVARCHAR")
                                .HasColumnName("EML_EMAIL");

                            b1.HasKey("DizimistaId");

                            b1.ToTable("T_DIZIMISTA");

                            b1.WithOwner()
                                .HasForeignKey("DizimistaId");
                        });

                    b.OwnsOne("CentroPastoralSF.Domain.ValueObjects.Nomeacao", "Nome", b1 =>
                        {
                            b1.Property<int>("DizimistaId")
                                .HasColumnType("int");

                            b1.Property<string>("Nome")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("NVARCHAR")
                                .HasColumnName("NOM_NOME");

                            b1.Property<string>("Sobrenome")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("NVARCHAR")
                                .HasColumnName("NOM_SOBRENOME");

                            b1.HasKey("DizimistaId");

                            b1.ToTable("T_DIZIMISTA");

                            b1.WithOwner()
                                .HasForeignKey("DizimistaId");
                        });

                    b.OwnsOne("CentroPastoralSF.Domain.ValueObjects.Endereco", "Endereco", b1 =>
                        {
                            b1.Property<int>("DizimistaId")
                                .HasColumnType("int");

                            b1.Property<string>("Bairro")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("NVARCHAR")
                                .HasColumnName("END_BAIRRO");

                            b1.Property<string>("Cep")
                                .IsRequired()
                                .HasMaxLength(8)
                                .HasColumnType("NVARCHAR")
                                .HasColumnName("END_CEP");

                            b1.Property<string>("Complemento")
                                .HasMaxLength(100)
                                .HasColumnType("NVARCHAR")
                                .HasColumnName("END_COMPLEMENTO");

                            b1.Property<string>("Logradouro")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("NVARCHAR")
                                .HasColumnName("END_LOGRADOURO");

                            b1.Property<string>("Municipio")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("NVARCHAR")
                                .HasColumnName("END_MUNICIPIO");

                            b1.Property<string>("Numero")
                                .IsRequired()
                                .HasMaxLength(10)
                                .HasColumnType("NVARCHAR")
                                .HasColumnName("END_NUMERO");

                            b1.Property<string>("UF")
                                .IsRequired()
                                .HasMaxLength(2)
                                .HasColumnType("NVARCHAR")
                                .HasColumnName("END_UF");

                            b1.HasKey("DizimistaId");

                            b1.ToTable("T_DIZIMISTA");

                            b1.WithOwner()
                                .HasForeignKey("DizimistaId");
                        });

                    b.OwnsOne("CentroPastoralSF.Domain.ValueObjects.Telefone", "Telefone", b1 =>
                        {
                            b1.Property<int>("DizimistaId")
                                .HasColumnType("int");

                            b1.Property<string>("Ddd")
                                .IsRequired()
                                .HasMaxLength(2)
                                .HasColumnType("NVARCHAR")
                                .HasColumnName("NUM_DDD");

                            b1.Property<string>("Numero")
                                .IsRequired()
                                .HasMaxLength(9)
                                .HasColumnType("NVARCHAR")
                                .HasColumnName("NUM_NUMERO");

                            b1.HasKey("DizimistaId");

                            b1.ToTable("T_DIZIMISTA");

                            b1.WithOwner()
                                .HasForeignKey("DizimistaId");
                        });

                    b.Navigation("Email")
                        .IsRequired();

                    b.Navigation("Endereco")
                        .IsRequired();

                    b.Navigation("Nome")
                        .IsRequired();

                    b.Navigation("Telefone")
                        .IsRequired();
                });

            modelBuilder.Entity("CentroPastoralSF.Domain.Usuario.Usuario", b =>
                {
                    b.OwnsOne("CentroPastoralSF.Domain.ValueObjects.Email", "Login", b1 =>
                        {
                            b1.Property<int>("UsuarioId")
                                .HasColumnType("int");

                            b1.Property<string>("Endereco")
                                .IsRequired()
                                .HasMaxLength(300)
                                .HasColumnType("NVARCHAR")
                                .HasColumnName("EML_EMAIL");

                            b1.HasKey("UsuarioId");

                            b1.ToTable("T_USUARIO");

                            b1.WithOwner()
                                .HasForeignKey("UsuarioId");
                        });

                    b.OwnsOne("CentroPastoralSF.Domain.ValueObjects.Nomeacao", "Nome", b1 =>
                        {
                            b1.Property<int>("UsuarioId")
                                .HasColumnType("int");

                            b1.Property<string>("Nome")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("NVARCHAR")
                                .HasColumnName("NOM_NOME");

                            b1.Property<string>("Sobrenome")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("NVARCHAR")
                                .HasColumnName("NOM_SOBRENOME");

                            b1.HasKey("UsuarioId");

                            b1.ToTable("T_USUARIO");

                            b1.WithOwner()
                                .HasForeignKey("UsuarioId");
                        });

                    b.Navigation("Login")
                        .IsRequired();

                    b.Navigation("Nome")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
